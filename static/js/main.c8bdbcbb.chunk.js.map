{"version":3,"sources":["components/Map/Map.js","components/Bottombar/Bottombar.js","App.js","serviceWorker.js","index.js"],"names":["vheight","window","innerHeight","vwidth","innerWidth","Map","state","viewport","width","height","latitude","longitude","zoom","pitch","bearing","markerstart","marker","markerdest","confirmshow","haveDestination","haveUsersLocation","linelayerstuff","id","data","type","coordinates","getLineWidth","getLineColor","directions","directionnum","intervalNum","tripdist","distances","mapRef","React","createRef","setPosition","navigator","geolocation","getCurrentPosition","position","_this","setState","coords","lat1","lon1","lat2","lon2","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","err","console","log","enableHighAccuracy","handleViewportChange","Object","objectSpread","handleGeocoderViewportChange","handleGeocoderViewportChange2","transitionDuration","lineWidth","handleErrors","response","ok","Error","statusText","startFunction","result","center","resultFunction","plainDirections","fetch","then","json","code","dir","routes","geometry","pdir","legs","steps","i","length","push","maneuver","instruction","distance","newViewport","WebMercatorViewport","fitBounds","padding","offset","catch","error","confirmclick","interval","setInterval","endrouteclick","clearInterval","_this2","this","_this3","react_default","a","createElement","esm","assign","ref","mapboxApiAccessToken","process","mapStyle","onViewportChange","dist_esm","layers","GeoJsonLayer","offsetLeft","offsetTop","className","alt","src","dist_default","onResult","placeholder","Button","onClick","color","Component","Bottombar","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","expanded","document","getElementById","classList","toggle","toggleBottom","class","App","components_Map_Map","components_Bottombar_Bottombar","Boolean","location","hostname","match","require","config","ReactDOM","render","src_App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c8bdbcbb.chunk.js","sourcesContent":["import React, { Component}  from 'react';\r\nimport MapGL, { Marker } from 'react-map-gl';\r\nimport Geocoder from 'react-map-gl-geocoder'\r\nimport DeckGL, { GeoJsonLayer } from 'deck.gl';\r\nimport WebMercatorViewport from 'viewport-mercator-project'\r\nimport { Button } from 'reactstrap';\r\nimport \"./Map.css\";\r\n\r\n\r\nconst vheight = window.innerHeight-85\r\nconst vwidth = window.innerWidth\r\n\r\nclass Map extends Component {\r\n\r\n  state = {\r\n    viewport: {\r\n      width: vwidth,\r\n      height: vheight,\r\n      latitude: 41.4993,\r\n      longitude: -81.6994,\r\n      zoom: 0,\r\n      pitch: 0,\r\n      bearing: 0\r\n    },\r\n    markerstart: {\r\n      latitude: 41.4993,\r\n      longitude: -81.6994,\r\n    },\r\n    marker: {\r\n      latitude: 41.4993,\r\n      longitude: -81.6994,\r\n    },\r\n    markerdest: {\r\n      latitude: 0,\r\n      longitude:0 \r\n    },\r\n    confirmshow: false,\r\n    haveDestination: false,\r\n    haveUsersLocation: false,\r\n    linelayerstuff: {\r\n      id: 'GeoJsonLayer', \r\n      data: {\r\n        \"type\": \"LineString\",\r\n        \"coordinates\": [[0, 0], [0, 0]]\r\n      },\r\n      getLineWidth: 12,\r\n      getLineColor: [255,20,147]\r\n    },\r\n    directions: [],\r\n    directionnum: 1,\r\n    intervalNum: 0,\r\n    tripdist: 0,\r\n    distances: [],\r\n    coordinates: []\r\n  };\r\n\r\n  mapRef = React.createRef()\r\n\r\n  componentDidMount() {\r\n    const success = (position) => {\r\n      this.setState({\r\n        viewport: {\r\n          width: vwidth,\r\n          height: vheight,\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude,\r\n          zoom: 14,\r\n          pitch: 0,\r\n          bearing: 0\r\n        },\r\n        marker: {\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude,\r\n        },\r\n        markerstart: {\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude,\r\n        },\r\n\r\n        haveUsersLocation: true\r\n      })\r\n    }\r\n    const error = (err) => {\r\n      console.log(err)\r\n    }\r\n    const options = {\r\n      enableHighAccuracy: true\r\n    }\r\n    navigator.geolocation.getCurrentPosition(success, error, options) \r\n  }\r\n\r\n  setPosition = () => {\r\n    const success = (position) => {\r\n      this.setState({\r\n        marker: {\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude,\r\n        },\r\n        haveUsersLocation: true\r\n      })\r\n      const lat1 = position.coords.latitude\r\n      const lon1 = position.coords.longitude\r\n      const lat2 = this.state.coordinates[this.state.directionnum + 1][1]\r\n      const lon2 = this.state.coordinates[this.state.directionnum + 1][0]\r\n      const radlat1 = Math.PI * lat1/180;\r\n      const radlat2 = Math.PI * lat2/180;\r\n      const theta = lon1-lon2;\r\n      const radtheta = Math.PI * theta/180;\r\n      let dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n      if (dist > 1) {\r\n        dist = 1;\r\n      }\r\n      dist = Math.acos(dist);\r\n      dist = dist * 180/Math.PI;\r\n      dist = dist * 60 * 1.1515;\r\n      dist = dist * 1.609344\r\n      if(dist<.1) {\r\n        this.setState({\r\n          directionnum: this.state.directionnum + 1\r\n        })\r\n      }\r\n    }\r\n    const error = (err) => {\r\n      console.log(err)\r\n    }\r\n    const options = {\r\n      enableHighAccuracy: true\r\n    }\r\n    navigator.geolocation.getCurrentPosition(success, error, options) \r\n  }\r\n  \r\n  handleViewportChange = (viewport) => {\r\n    this.setState({\r\n      viewport: { ...this.state.viewport, ...viewport }, \r\n    })\r\n    \r\n  }\r\n\r\n  handleGeocoderViewportChange = (viewport) => {\r\n    return\r\n    /*const geocoderDefaultOverrides = { transitionDuration: 1000 }\r\n\r\n    return this.handleViewportChange({\r\n      ...viewport,\r\n      ...geocoderDefaultOverrides\r\n    })*/\r\n  }\r\n\r\n  handleGeocoderViewportChange2 = (viewport) => {\r\n    const geocoderDefaultOverrides = { transitionDuration: 1700 }\r\n\r\n    return this.handleViewportChange({\r\n      ...viewport,\r\n      ...geocoderDefaultOverrides\r\n    })\r\n  }\r\n\r\n  lineWidth = dist => {\r\n    if(dist>3082328) {\r\n      return 4000\r\n    }\r\n    if(dist>2000000) {\r\n      return 3000\r\n    }\r\n    if(dist>600000) {\r\n      return 2000\r\n    }\r\n    if(dist>180770) {\r\n      return 1000\r\n    }\r\n    if(dist>81770) {\r\n      return 400\r\n    }\r\n    if(dist>30770) {\r\n      return 300\r\n    }\r\n    if(dist>10770) {\r\n      return 200\r\n    }\r\n    return 100\r\n  }\r\n\r\n  handleErrors = (response) => {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n  }\r\n\r\n  startFunction = (result) => {\r\n    this.setState({\r\n      markerstart: {\r\n        latitude: result.result.center[1],\r\n        longitude: result.result.center[0]\r\n      }\r\n    })\r\n  }\r\n\r\n  resultFunction = (result) => {\r\n    this.setState({\r\n      directionnum: 1\r\n    })\r\n    const directions = [[this.state.markerstart.longitude, this.state.markerstart.latitude]]\r\n    const plainDirections = []\r\n    const distances = []\r\n    fetch('https://api.mapbox.com/directions/v5/mapbox/driving/' + this.state.markerstart.longitude + ',' + this.state.markerstart.latitude + ';' +\r\n      result.result.center[0] + ',' + result.result.center[1] + '?steps=true&geometries=geojson&access_token=' + process.env.REACT_APP_MAP_API)\r\n      .then(this.handleErrors)\r\n      .then(response => {\r\n        response.json().then(data => {\r\n          if(data.code === \"NoRoute\"){\r\n            console.log(data.code)\r\n            return\r\n          }\r\n          const dir = data.routes[0].geometry.coordinates\r\n          const pdir = data.routes[0].legs[0].steps\r\n          for(let i=0;i<dir.length;i++) {\r\n            directions.push(dir[i])\r\n          }\r\n          for(let i=0;i<pdir.length;i++) {\r\n            plainDirections.push(pdir[i].maneuver.instruction)\r\n            distances.push(pdir[i].distance)\r\n          }\r\n\r\n          this.setState({\r\n            tripdist: data.routes[0].distance,\r\n            distances: distances, \r\n            coordinates: directions\r\n          })\r\n          \r\n          const viewport = new WebMercatorViewport(this.state.viewport)\r\n          const newViewport = viewport.fitBounds([[this.state.markerstart.longitude, this.state.markerstart.latitude], [result.result.center[0], result.result.center[1]]], {\r\n            padding: 30,\r\n            offset: [-100, -100]\r\n          })\r\n          this.setState({\r\n            viewport: {\r\n              width: 800,\r\n              height: 600,\r\n              latitude: newViewport.latitude,\r\n              longitude: newViewport.longitude,\r\n              zoom: newViewport.zoom,\r\n              pitch: 0,\r\n              bearing: 0,\r\n              transitionDuration: 1700\r\n            },\r\n            markerdest: {\r\n              latitude: result.result.center[1],\r\n              longitude: result.result.center[0]\r\n            },\r\n            confirmshow: true,\r\n            linelayerstuff: {\r\n              id: 'GeoJsonLayer', \r\n              data: {\r\n                \"type\": \"LineString\",\r\n                \"coordinates\": directions\r\n              },\r\n              getLineWidth: this.lineWidth(data.routes[0].distance),\r\n              getLineColor: [255,20,147]\r\n            },\r\n            directions: plainDirections\r\n          })\r\n      })\r\n      }).catch(error => {\r\n          console.log(error)\r\n    })\r\n  }\r\n  \r\n  confirmclick = () => {\r\n    const interval = setInterval(this.setPosition, 1500)\r\n    this.setState({\r\n      viewport: {\r\n        width: vwidth,\r\n        height: vheight,\r\n        latitude: this.state.markerstart.latitude,\r\n        longitude: this.state.markerstart.longitude,\r\n        zoom: 14,\r\n        pitch: 0,\r\n        bearing: 0,\r\n        transitionDuration: 1700\r\n      },\r\n      confirmshow: false,\r\n      haveDestination: true,\r\n      linelayerstuff: {\r\n        id: 'GeoJsonLayer', \r\n        data: {\r\n          \"type\": \"LineString\",\r\n          \"coordinates\": this.state.linelayerstuff.data.coordinates\r\n        },\r\n        getLineWidth: 80,\r\n        getLineColor: [255,20,147]\r\n      },\r\n      intervalNum: interval\r\n    })\r\n  }\r\n\r\n  endrouteclick = () => {\r\n    const success = (position) => {\r\n      this.setState({\r\n        viewport: {\r\n          width: vwidth,\r\n          height: vheight,\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude,\r\n          zoom: 14,\r\n          pitch: 0,\r\n          bearing: 0,\r\n          transitionDuration: 1700\r\n        },\r\n        marker: {\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude,\r\n        },\r\n        markerstart: {\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude,\r\n        },\r\n        linelayerstuff: {\r\n          id: 'GeoJsonLayer', \r\n          data: {\r\n            \"type\": \"LineString\",\r\n            \"coordinates\": [[0,0], [0,0]]\r\n          },\r\n          getLineWidth: 0,\r\n          getLineColor: [255,20,147]\r\n        },\r\n        haveUsersLocation: true,\r\n        haveDestination: false\r\n      })\r\n    }\r\n    const error = (err) => {\r\n      console.log(err)\r\n    }\r\n    const options = {\r\n      enableHighAccuracy: true\r\n    }\r\n    navigator.geolocation.getCurrentPosition(success, error, options)\r\n    clearInterval(this.state.intervalNum)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <MapGL\r\n            ref={this.mapRef}\r\n            {...this.state.viewport}\r\n            mapboxApiAccessToken={process.env.REACT_APP_MAP_API}\r\n            mapStyle=\"mapbox://styles/mapbox/streets-v10\"\r\n            onViewportChange={(viewport) => {\r\n              this.setState({viewport})}}\r\n          >\r\n          <DeckGL\r\n              {...this.state.viewport}\r\n              layers={[\r\n                new GeoJsonLayer(this.state.linelayerstuff)\r\n              ]}\r\n          />\r\n            <Marker latitude={this.state.markerstart.latitude} longitude={this.state.markerstart.longitude} offsetLeft={-20} offsetTop={-30}>\r\n              <img className = \"truckimg\" alt='' src ='https://unixtitan.net/images/push-pin-clipart-transparent-background-5.png' />\r\n            </Marker>\r\n            {this.state.haveDestination && <Marker latitude={this.state.marker.latitude} longitude={this.state.marker.longitude} offsetLeft={-25} offsetTop={-20}>\r\n              <img className = \"blip\" alt='' src ='https://i.imgur.com/ZUyRrkh.png' />\r\n            </Marker>}\r\n            {this.state.confirmshow && <Marker latitude={this.state.markerdest.latitude} longitude={this.state.markerdest.longitude} offsetLeft={-25} offsetTop={-10}>\r\n              <img className = \"treasureimg\" alt='' src ='https://pngimg.com/uploads/treasure_chest/treasure_chest_PNG154.png' />\r\n            </Marker>} \r\n            {this.state.haveDestination && <Marker latitude={this.state.markerdest.latitude} longitude={this.state.markerdest.longitude} offsetLeft={-25} offsetTop={-10}>\r\n              <img className = \"treasureimg\" alt='' src ='https://pngimg.com/uploads/treasure_chest/treasure_chest_PNG154.png' />\r\n            </Marker>}\r\n            \r\n            {!this.state.haveDestination && <Geocoder\r\n              mapRef={this.mapRef}\r\n              onViewportChange={this.handleGeocoderViewportChange2}\r\n              mapboxApiAccessToken={process.env.REACT_APP_MAP_API}\r\n              onResult={this.startFunction}\r\n              placeholder=\"Current location\"\r\n              position=\"top-left\"\r\n            />}\r\n\r\n            {!this.state.haveDestination && <Geocoder\r\n              mapRef={this.mapRef}\r\n              onViewportChange={this.handleGeocoderViewportChange}\r\n              mapboxApiAccessToken={process.env.REACT_APP_MAP_API}\r\n              onResult={this.resultFunction}\r\n              placeholder=\"Search destination\"\r\n            />}\r\n          </MapGL>\r\n          <div className=\"overmap\">\r\n            {this.state.haveDestination && <p className=\"directionp\">\r\n                                             Directions:<br></br>\r\n                                             {this.state.directions[this.state.directionnum-1]}<br></br>\r\n                                             Then:<br></br>\r\n                                             {this.state.directions[this.state.directionnum]}\r\n                                           </p>}\r\n            {this.state.confirmshow && <Button id=\"ConfirmBtn\" onClick={this.confirmclick} className=\"confirmbtn\" color=\"success\">Go!</Button>}\r\n            {this.state.haveDestination && <Button id=\"EndRouteBtn\" onClick={this.endrouteclick} className=\"endroutebtn\" color=\"danger\">End Route</Button>}\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map;","import React, { Component } from 'react'\n//import axios from 'axios'\nimport './bottombar.css'\n\n  class Bottombar extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        expanded: false\n      }\n    }\n\n    toggleBottom () {\n      document.getElementById(\"expand\").classList.toggle(\"openBottom\")\n      document.getElementById(\"thing\").classList.toggle(\"rotate\")\n      document.getElementById(\"containers\").classList.toggle(\"display\")\n    }\n\n    render() {\n      return (\n        <div id=\"expand\" className=\"bottomContainer\">\n          <div className=\"outerContianer\">\n\n            <div className=\"opening\" onClick={() => {this.toggleBottom()}}>\n              <i id=\"thing\" className=\"fas fa-angle-up fa-3x\"></i>\n              <div className=\"middle\">\n                <h3>Book a Muber</h3>\n                <span>Friends with trucks</span>\n              </div>\n            </div>\n\n            <div id=\"containers\" className=\"bottomOuterContainer\">\n              <div className=\"bottomInnercontainer\">\n                <div>\n                  <button className=\"bottomButton\">\n                    <i class=\"fas fa-truck-pickup\"></i>\n                    Truck Only\n                  </button>\n                </div>\n                <div>\n                  <button className=\"bottomButton\">\n                    <i class=\"fas fa-truck-pickup\"></i>\n                    Truck with Help\n                  </button>\n                </div>\n                <div>\n                  <button className=\"bottomButton\">\n                    <i class=\"fas fa-truck-pickup\"></i>\n                    Future Move\n                  </button>\n                </div>\n                <div>\n                  <button className=\"bottomButton\">\n                    <span className=\"bold\">Small</span>\n                    <br/>\n                    <span>&lt; 250lbs.</span>\n                  </button>\n                </div>\n                <div>\n                  <button className=\"bottomButton\">\n                    <span className=\"bold\">Medium</span>\n                    <br/>\n                    <span>&gt; 250lbs.</span>\n                  </button>\n                </div>\n                <div>\n                  <button className=\"bottomButton\">\n                    <span className=\"bold\">Large</span>\n                    <br/>\n                    <span>&gt; 500lbs.</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  export default Bottombar","import React from \"react\"\nimport Map from \"./components/Map\"\nimport Bottombar from \"./components/Bottombar\"\n\n class App extends React.Component {\n  \n  render() {\n    return (\n       <div>\n         <Map />\n         <Bottombar />\n       </div>\n     )\n   }\n }\n \n export default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrequire('dotenv').config()\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}